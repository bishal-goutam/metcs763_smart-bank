{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getTransactionsByAccountId}from'../services/api';import'../styles/TransactionDetails.css';import'../styles/GlobalStyles.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function TransactionDetails(_ref){let{accountId}=_ref;const[transactions,setTransactions]=useState([]);const[error,setError]=useState(null);useEffect(()=>{async function fetchTransactions(){try{const response=await getTransactionsByAccountId(accountId);// Ensure transactions are in array format\nsetTransactions(Array.isArray(response.data)?response.data:[]);setError(null);console.error(\"Success fetching transactions:\");console.log(\"Fetched transactions:\",response.data);}catch(error){console.error(\"Error fetching transactions:\",error);setError(\"Failed to load transactions.\");}}fetchTransactions();},[accountId]);if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"transaction-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Transaction Details\"}),transactions.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"transaction-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Balance Before\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Balance After\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactions.map(transaction=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:transaction.transactionDate}),/*#__PURE__*/_jsx(\"td\",{children:transaction.description}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",transaction.amount]}),/*#__PURE__*/_jsx(\"td\",{children:transaction.transactionType}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",transaction.balanceBefore]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",transaction.balanceAfter]})]},transaction.id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No transactions available for this account.\"})]});}export default TransactionDetails;","map":{"version":3,"names":["React","useState","useEffect","getTransactionsByAccountId","jsxs","_jsxs","jsx","_jsx","TransactionDetails","_ref","accountId","transactions","setTransactions","error","setError","fetchTransactions","response","Array","isArray","data","console","log","children","className","length","map","transaction","transactionDate","description","amount","transactionType","balanceBefore","balanceAfter","id"],"sources":["D:/Study/Boston University/Fall 2 2024/MET CS 763 - Software Security/FinalApplication/smart-bank/smart-bank/src/main/resources/static/smart-banking-ui/src/components/TransactionDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {getTransactionsByAccountId} from '../services/api';\r\nimport '../styles/TransactionDetails.css';\r\nimport '../styles/GlobalStyles.css';\r\n\r\nfunction TransactionDetails({ accountId }) {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchTransactions() {\r\n            try {\r\n                const response = await getTransactionsByAccountId(accountId);\r\n                // Ensure transactions are in array format\r\n                setTransactions(Array.isArray(response.data) ? response.data : []);\r\n                setError(null);\r\n                console.error(\"Success fetching transactions:\");\r\n                console.log(\"Fetched transactions:\", response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching transactions:\", error);\r\n                setError(\"Failed to load transactions.\");\r\n            }\r\n        }\r\n        fetchTransactions();\r\n    }, [accountId]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"transaction-details\">\r\n            <h3>Transaction Details</h3>\r\n            {transactions.length > 0 ? (\r\n                <table className=\"transaction-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Description</th>\r\n                        <th>Amount</th>\r\n                        <th>Type</th>\r\n                        <th>Balance Before</th>\r\n                        <th>Balance After</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {transactions.map(transaction => (\r\n                        <tr key={transaction.id}>\r\n                            <td>{transaction.transactionDate}</td>\r\n                            <td>{transaction.description}</td>\r\n                            <td>${transaction.amount}</td>\r\n                            <td>{transaction.transactionType}</td>\r\n                            <td>${transaction.balanceBefore}</td>\r\n                            <td>${transaction.balanceAfter}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No transactions available for this account.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransactionDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}