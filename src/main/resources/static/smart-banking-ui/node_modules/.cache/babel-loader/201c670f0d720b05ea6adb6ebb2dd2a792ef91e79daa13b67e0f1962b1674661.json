{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// New Login API call\nexport const login = (username, password) => {\n  return axios.post(`${API_BASE_URL}/auth/login`, {\n    username: username,\n    password: password\n  });\n};\nconst getAuthConfig = () => {\n  const username = localStorage.getItem('username');\n  const password = localStorage.getItem('password');\n  const userId = localStorage.getItem('userId');\n  if (username && password) {\n    return {\n      headers: {\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`\n      }\n    };\n  }\n  return {}; // Return an empty object if credentials aren't available\n};\n\n// Other API functions with auth config\nexport const getAccount = accountId => axios.get(`${API_BASE_URL}/accounts/${accountId}`, getAuthConfig());\nexport const depositAmount = (accountId, amount) => axios.put(`${API_BASE_URL}/accounts/${accountId}/deposit`, {\n  amount\n}, getAuthConfig());\nexport const withdrawAmount = (accountId, amount) => axios.put(`${API_BASE_URL}/accounts/${accountId}/withdraw`, {\n  amount\n}, getAuthConfig());\nexport const getAllAccounts = () => axios.get(`${API_BASE_URL}/accounts`, getAuthConfig());\nexport const deleteAccount = accountId => axios.delete(`${API_BASE_URL}/accounts/${accountId}`, getAuthConfig());\nexport const addAccount = accountData => {\n  return axios.post(`${API_BASE_URL}/accounts`, {\n    accountHolderName: accountData.account_holder_name,\n    balance: accountData.balance\n  }, getAuthConfig());\n};\nexport const getAccountsByUser = userId => {\n  return axios.get(`${API_BASE_URL}/accounts/user/${username}`, getAuthConfig());\n};","map":{"version":3,"names":["axios","API_BASE_URL","login","username","password","post","getAuthConfig","localStorage","getItem","userId","headers","Authorization","btoa","getAccount","accountId","get","depositAmount","amount","put","withdrawAmount","getAllAccounts","deleteAccount","delete","addAccount","accountData","accountHolderName","account_holder_name","balance","getAccountsByUser"],"sources":["D:/Study/Boston University/Fall 2 2024/MET CS 763 - Software Security/FinalApplication/smart-bank/smart-bank/src/main/resources/static/smart-banking-ui/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// New Login API call\r\nexport const login = (username, password) => {\r\n    return axios.post(`${API_BASE_URL}/auth/login`, {\r\n        username: username,\r\n        password: password\r\n    });\r\n};\r\n\r\nconst getAuthConfig = () => {\r\n    const username = localStorage.getItem('username');\r\n    const password = localStorage.getItem('password');\r\n    const userId = localStorage.getItem('userId');\r\n    if (username && password) {\r\n        return {\r\n            headers: {\r\n                Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n            }\r\n        };\r\n    }\r\n    return {}; // Return an empty object if credentials aren't available\r\n};\r\n\r\n\r\n// Other API functions with auth config\r\nexport const getAccount = (accountId) => axios.get(`${API_BASE_URL}/accounts/${accountId}`, getAuthConfig());\r\nexport const depositAmount = (accountId, amount) => axios.put(`${API_BASE_URL}/accounts/${accountId}/deposit`, { amount }, getAuthConfig());\r\nexport const withdrawAmount = (accountId, amount) => axios.put(`${API_BASE_URL}/accounts/${accountId}/withdraw`, { amount }, getAuthConfig());\r\nexport const getAllAccounts = () => axios.get(`${API_BASE_URL}/accounts`, getAuthConfig());\r\nexport const deleteAccount = (accountId) => axios.delete(`${API_BASE_URL}/accounts/${accountId}`, getAuthConfig());\r\n\r\nexport const addAccount = (accountData) => {\r\n    return axios.post(`${API_BASE_URL}/accounts`, {\r\n        accountHolderName: accountData.account_holder_name,\r\n        balance: accountData.balance\r\n    }, getAuthConfig());\r\n};\r\n\r\nexport const getAccountsByUser = (userId) => {\r\n    return axios.get(`${API_BASE_URL}/accounts/user/${username}`,getAuthConfig());\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACzC,OAAOJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,aAAa,EAAE;IAC5CE,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACd,CAAC,CAAC;AACN,CAAC;AAED,MAAME,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAMH,QAAQ,GAAGI,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAMJ,QAAQ,GAAGG,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,IAAIL,QAAQ,IAAIC,QAAQ,EAAE;IACtB,OAAO;MACHM,OAAO,EAAE;QACLC,aAAa,EAAE,SAASC,IAAI,CAAC,GAAGT,QAAQ,IAAIC,QAAQ,EAAE,CAAC;MAC3D;IACJ,CAAC;EACL;EACA,OAAO,CAAC,CAAC,CAAC,CAAC;AACf,CAAC;;AAGD;AACA,OAAO,MAAMS,UAAU,GAAIC,SAAS,IAAKd,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,aAAaa,SAAS,EAAE,EAAER,aAAa,CAAC,CAAC,CAAC;AAC5G,OAAO,MAAMU,aAAa,GAAGA,CAACF,SAAS,EAAEG,MAAM,KAAKjB,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,aAAaa,SAAS,UAAU,EAAE;EAAEG;AAAO,CAAC,EAAEX,aAAa,CAAC,CAAC,CAAC;AAC3I,OAAO,MAAMa,cAAc,GAAGA,CAACL,SAAS,EAAEG,MAAM,KAAKjB,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,aAAaa,SAAS,WAAW,EAAE;EAAEG;AAAO,CAAC,EAAEX,aAAa,CAAC,CAAC,CAAC;AAC7I,OAAO,MAAMc,cAAc,GAAGA,CAAA,KAAMpB,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,WAAW,EAAEK,aAAa,CAAC,CAAC,CAAC;AAC1F,OAAO,MAAMe,aAAa,GAAIP,SAAS,IAAKd,KAAK,CAACsB,MAAM,CAAC,GAAGrB,YAAY,aAAaa,SAAS,EAAE,EAAER,aAAa,CAAC,CAAC,CAAC;AAElH,OAAO,MAAMiB,UAAU,GAAIC,WAAW,IAAK;EACvC,OAAOxB,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,WAAW,EAAE;IAC1CwB,iBAAiB,EAAED,WAAW,CAACE,mBAAmB;IAClDC,OAAO,EAAEH,WAAW,CAACG;EACzB,CAAC,EAAErB,aAAa,CAAC,CAAC,CAAC;AACvB,CAAC;AAED,OAAO,MAAMsB,iBAAiB,GAAInB,MAAM,IAAK;EACzC,OAAOT,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,kBAAkBE,QAAQ,EAAE,EAACG,aAAa,CAAC,CAAC,CAAC;AACjF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}