{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Boston University\\\\Fall 2 2024\\\\MET CS 763 - Software Security\\\\FinalApplication\\\\smart-bank\\\\smart-bank\\\\src\\\\main\\\\resources\\\\static\\\\smart-banking-ui\\\\src\\\\components\\\\AccountList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllAccounts, getAccountsByUsername, deleteAccount } from '../services/api'; // Ensure getAccountsByUsername is correctly imported\nimport '../styles/AccountList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountList() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true); // Define loading state\n  const [error, setError] = useState(null); // Define error state\n\n  useEffect(() => {\n    var _document$cookie$spli, _document$cookie$spli2;\n    // Retrieve user_role and username from cookies\n    const user_role = (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith('user_role='))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n    const username = (_document$cookie$spli2 = document.cookie.split('; ').find(row => row.startsWith('username='))) === null || _document$cookie$spli2 === void 0 ? void 0 : _document$cookie$spli2.split('=')[1];\n    async function fetchAccounts() {\n      setLoading(true);\n      try {\n        let response;\n        if (user_role === 'BankManager') {\n          // Fetch all accounts if the user is a BankManager\n          response = await getAllAccounts();\n        } else if (username) {\n          // Fetch only accounts associated with the logged-in username\n          response = await getAccountsByUser(username);\n        }\n        if (response) {\n          setAccounts(response.data);\n          setError(null);\n        } else {\n          setError(\"No accounts available for this user.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching accounts:\", error);\n        setError(\"Failed to load accounts.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchAccounts();\n  }, []);\n  const handleDelete = accountId => {\n    deleteAccount(accountId).then(() => setAccounts(accounts.filter(account => account.id !== accountId))).catch(error => console.error(\"Error deleting account:\", error));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading accounts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), accounts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-cards\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: account.account_holder_name || \"Account Holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Account ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this), \" \", account.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 32\n          }, this), \" $\", account.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(account.id),\n            className: \"delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-button\",\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No accounts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(AccountList, \"v7BeaDmwrBy1BZ0ni/ZS6Wl6sY0=\");\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useState","useEffect","getAllAccounts","getAccountsByUsername","deleteAccount","jsxDEV","_jsxDEV","AccountList","_s","accounts","setAccounts","loading","setLoading","error","setError","_document$cookie$spli","_document$cookie$spli2","user_role","document","cookie","split","find","row","startsWith","username","fetchAccounts","response","getAccountsByUser","data","console","handleDelete","accountId","then","filter","account","id","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","account_holder_name","balance","onClick","_c","$RefreshReg$"],"sources":["D:/Study/Boston University/Fall 2 2024/MET CS 763 - Software Security/FinalApplication/smart-bank/smart-bank/src/main/resources/static/smart-banking-ui/src/components/AccountList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllAccounts, getAccountsByUsername, deleteAccount } from '../services/api'; // Ensure getAccountsByUsername is correctly imported\r\nimport '../styles/AccountList.css';\r\n\r\nfunction AccountList() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [loading, setLoading] = useState(true);  // Define loading state\r\n    const [error, setError] = useState(null);      // Define error state\r\n\r\n    useEffect(() => {\r\n        // Retrieve user_role and username from cookies\r\n        const user_role = document.cookie\r\n            .split('; ')\r\n            .find(row => row.startsWith('user_role='))\r\n            ?.split('=')[1];\r\n        const username = document.cookie\r\n            .split('; ')\r\n            .find(row => row.startsWith('username='))\r\n            ?.split('=')[1];\r\n\r\n        async function fetchAccounts() {\r\n            setLoading(true);\r\n            try {\r\n                let response;\r\n                if (user_role === 'BankManager') {\r\n                    // Fetch all accounts if the user is a BankManager\r\n                    response = await getAllAccounts();\r\n                } else if (username) {\r\n                    // Fetch only accounts associated with the logged-in username\r\n                    response = await getAccountsByUser(username);\r\n                }\r\n\r\n                if (response) {\r\n                    setAccounts(response.data);\r\n                    setError(null);\r\n                } else {\r\n                    setError(\"No accounts available for this user.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching accounts:\", error);\r\n                setError(\"Failed to load accounts.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchAccounts();\r\n    }, []);\r\n\r\n    const handleDelete = (accountId) => {\r\n        deleteAccount(accountId)\r\n            .then(() => setAccounts(accounts.filter(account => account.id !== accountId)))\r\n            .catch(error => console.error(\"Error deleting account:\", error));\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading accounts...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"account-list\">\r\n            <h2>Accounts</h2>\r\n            {accounts.length > 0 ? (\r\n                <div className=\"account-cards\">\r\n                    {accounts.map(account => (\r\n                        <div className=\"account-card\" key={account.id}>\r\n                            <h3>{account.account_holder_name || \"Account Holder\"}</h3>\r\n                            <p><strong>Account ID:</strong> {account.id}</p>\r\n                            <p><strong>Balance:</strong> ${account.balance}</p>\r\n                            <div className=\"actions\">\r\n                                <button onClick={() => handleDelete(account.id)} className=\"delete-button\">Delete</button>\r\n                                <button className=\"view-button\">View Details</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>No accounts available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}