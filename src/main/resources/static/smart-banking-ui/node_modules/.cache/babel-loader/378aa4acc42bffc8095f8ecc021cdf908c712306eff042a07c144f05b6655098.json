{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8080/api';// New Login API call\nexport const login=(username,password)=>{return axios.post(`${API_BASE_URL}/auth/login`,{username:username,password:password});};const getAuthConfig=()=>{const username=localStorage.getItem('username');const password=localStorage.getItem('password');const userId=localStorage.getItem('userId');const role=localStorage.getItem('role');if(username&&password){return{headers:{Authorization:`Basic ${btoa(`${username}:${password}`)}`}};}return{};// Return an empty object if credentials aren't available\n};// Other API functions with auth config\nexport const getAccount=accountId=>axios.get(`${API_BASE_URL}/accounts/${accountId}`,getAuthConfig());export const depositAmount=(accountId,amount)=>axios.put(`${API_BASE_URL}/accounts/${accountId}/deposit`,{amount},getAuthConfig());export const withdrawAmount=(accountId,amount)=>axios.put(`${API_BASE_URL}/accounts/${accountId}/withdraw`,{amount},getAuthConfig());export const getAllAccounts=()=>axios.get(`${API_BASE_URL}/accounts`,getAuthConfig());export const deleteAccount=accountId=>axios.delete(`${API_BASE_URL}/accounts/${accountId}`,getAuthConfig());export const addAccount=accountData=>{return axios.post(`${API_BASE_URL}/accounts`,{accountHolderName:accountData.account_holder_name,balance:accountData.balance},getAuthConfig());};export const getAccountsByUser=userId=>{return axios.get(`${API_BASE_URL}/accounts/user/${userId}`,getAuthConfig());};export const getTransactionsByAccountId=accountId=>{return axios.get(`${API_BASE_URL}/transactions/account/${accountId}`,getAuthConfig());};export const internalTransfer=(fromAccountId,toAccountId,amount)=>{return axios.post(`${API_BASE_URL}/transfer/internal`,{fromAccountId,toAccountId,amount},getAuthConfig());};export const externalTransfer=(fromAccountId,amount,toRoutingNumber,toAccountNumber)=>{return axios.post(`${API_BASE_URL}/transfer/external`,{fromAccountId,amount,toRoutingNumber,toAccountNumber},getAuthConfig());};","map":{"version":3,"names":["axios","API_BASE_URL","login","username","password","post","getAuthConfig","localStorage","getItem","userId","role","headers","Authorization","btoa","getAccount","accountId","get","depositAmount","amount","put","withdrawAmount","getAllAccounts","deleteAccount","delete","addAccount","accountData","accountHolderName","account_holder_name","balance","getAccountsByUser","getTransactionsByAccountId","internalTransfer","fromAccountId","toAccountId","externalTransfer","toRoutingNumber","toAccountNumber"],"sources":["D:/Study/Boston University/Fall 2 2024/MET CS 763 - Software Security/FinalApplication/smart-bank/smart-bank/src/main/resources/static/smart-banking-ui/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// New Login API call\r\nexport const login = (username, password) => {\r\n    return axios.post(`${API_BASE_URL}/auth/login`, {\r\n        username: username,\r\n        password: password\r\n    });\r\n};\r\n\r\nconst getAuthConfig = () => {\r\n    const username = localStorage.getItem('username');\r\n    const password = localStorage.getItem('password');\r\n    const userId = localStorage.getItem('userId');\r\n    const role = localStorage.getItem('role');\r\n    if (username && password) {\r\n        return {\r\n            headers: {\r\n                Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n            }\r\n        };\r\n    }\r\n    return {}; // Return an empty object if credentials aren't available\r\n};\r\n\r\n\r\n// Other API functions with auth config\r\nexport const getAccount = (accountId) => axios.get(`${API_BASE_URL}/accounts/${accountId}`, getAuthConfig());\r\nexport const depositAmount = (accountId, amount) => axios.put(`${API_BASE_URL}/accounts/${accountId}/deposit`, { amount }, getAuthConfig());\r\nexport const withdrawAmount = (accountId, amount) => axios.put(`${API_BASE_URL}/accounts/${accountId}/withdraw`, { amount }, getAuthConfig());\r\nexport const getAllAccounts = () => axios.get(`${API_BASE_URL}/accounts`, getAuthConfig());\r\nexport const deleteAccount = (accountId) => axios.delete(`${API_BASE_URL}/accounts/${accountId}`, getAuthConfig());\r\n\r\nexport const addAccount = (accountData) => {\r\n    return axios.post(`${API_BASE_URL}/accounts`, {\r\n        accountHolderName: accountData.account_holder_name,\r\n        balance: accountData.balance\r\n    }, getAuthConfig());\r\n};\r\n\r\nexport const getAccountsByUser = (userId) => {\r\n    return axios.get(`${API_BASE_URL}/accounts/user/${userId}`,getAuthConfig());\r\n};\r\n\r\nexport const getTransactionsByAccountId = (accountId) => {\r\n    return axios.get(`${API_BASE_URL}/transactions/account/${accountId}`, getAuthConfig());\r\n};\r\n\r\nexport const internalTransfer = (fromAccountId, toAccountId, amount) => {\r\n    return axios.post(`${API_BASE_URL}/transfer/internal`, {\r\n        fromAccountId,\r\n        toAccountId,\r\n        amount\r\n    },\r\n        getAuthConfig());\r\n};\r\n\r\nexport const externalTransfer = (fromAccountId, amount, toRoutingNumber, toAccountNumber) => {\r\n    return axios.post(`${API_BASE_URL}/transfer/external`,{\r\n        fromAccountId,\r\n        amount,\r\n        toRoutingNumber,\r\n        toAccountNumber\r\n    },\r\n        getAuthConfig());\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}