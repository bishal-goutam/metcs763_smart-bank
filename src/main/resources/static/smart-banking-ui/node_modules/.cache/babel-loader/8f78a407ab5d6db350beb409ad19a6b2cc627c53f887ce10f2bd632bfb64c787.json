{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Boston University\\\\Fall 2 2024\\\\MET CS 763 - Software Security\\\\FinalApplication\\\\smart-bank\\\\smart-bank\\\\src\\\\main\\\\resources\\\\static\\\\smart-banking-ui\\\\src\\\\components\\\\AccountList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllAccounts, getAccountsByUser } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport TransactionDetails from './TransactionDetails'; // Import TransactionDetails component\nimport NavigationButtons from './NavigationButtons'; // Import  component\nimport '../styles/AccountList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountList() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedAccountId, setSelectedAccountId] = useState(null); // State for selected account\n\n  useEffect(() => {\n    const userRole = localStorage.getItem('userRole');\n    const userId = localStorage.getItem('userId');\n    async function fetchAccounts() {\n      setLoading(true);\n      try {\n        let response;\n        if (userRole === 'BankManager') {\n          response = await getAllAccounts();\n        } else if (userRole === 'User' && userId) {\n          response = await getAccountsByUser(userId);\n        }\n        if (response) {\n          setAccounts(response.data);\n          setError(null);\n        } else {\n          setError(\"No accounts available for this user.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching accounts:\", error);\n        setError(\"Failed to load accounts.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchAccounts();\n  }, []);\n  const handleViewDetails = accountId => {\n    console.log(\"Selected Account ID:\", accountId);\n    setSelectedAccountId(accountId);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading accounts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavigationButtons, {\n      showBackToAll: !!viewSingleAccount,\n      onBackToAll: handleBackToAllAccounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), selectedAccountId ?\n    /*#__PURE__*/\n    // Display only the selected account with TransactionDetails\n    _jsxDEV(\"div\", {\n      className: \"account-details\",\n      children: accounts.filter(account => account.id === selectedAccountId).map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-card expanded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: account.account_holder_name || \"Account Holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Account ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 36\n          }, this), \" \", account.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 36\n          }, this), \" $\", account.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(TransactionDetails, {\n          accountId: selectedAccountId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this), \" \"]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Display all accounts with View Details button\n    _jsxDEV(\"div\", {\n      className: \"account-cards\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: account.account_holder_name || \"Account Holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Account ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this), \" \", account.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 32\n          }, this), \" $\", account.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-button\",\n          onClick: () => handleViewDetails(account.id),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(AccountList, \"+hC09Nud96eu5kyjYhelGT0BMw0=\");\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useState","useEffect","getAllAccounts","getAccountsByUser","useNavigate","TransactionDetails","NavigationButtons","jsxDEV","_jsxDEV","AccountList","_s","accounts","setAccounts","loading","setLoading","error","setError","selectedAccountId","setSelectedAccountId","userRole","localStorage","getItem","userId","fetchAccounts","response","data","console","handleViewDetails","accountId","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","showBackToAll","viewSingleAccount","onBackToAll","handleBackToAllAccounts","filter","account","id","map","account_holder_name","balance","onClick","_c","$RefreshReg$"],"sources":["D:/Study/Boston University/Fall 2 2024/MET CS 763 - Software Security/FinalApplication/smart-bank/smart-bank/src/main/resources/static/smart-banking-ui/src/components/AccountList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllAccounts, getAccountsByUser } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport TransactionDetails from './TransactionDetails'; // Import TransactionDetails component\r\nimport NavigationButtons from './NavigationButtons'; // Import  component\r\nimport '../styles/AccountList.css';\r\n\r\nfunction AccountList() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedAccountId, setSelectedAccountId] = useState(null); // State for selected account\r\n\r\n    useEffect(() => {\r\n        const userRole = localStorage.getItem('userRole');\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        async function fetchAccounts() {\r\n            setLoading(true);\r\n            try {\r\n                let response;\r\n                if (userRole === 'BankManager') {\r\n                    response = await getAllAccounts();\r\n                } else if (userRole === 'User' && userId) {\r\n                    response = await getAccountsByUser(userId);\r\n                }\r\n\r\n                if (response) {\r\n                    setAccounts(response.data);\r\n                    setError(null);\r\n                } else {\r\n                    setError(\"No accounts available for this user.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching accounts:\", error);\r\n                setError(\"Failed to load accounts.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchAccounts();\r\n    }, []);\r\n\r\n    const handleViewDetails = (accountId) => {\r\n        console.log(\"Selected Account ID:\", accountId);\r\n        setSelectedAccountId(accountId);\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return <div>Loading accounts...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"account-list\">\r\n            <h2>Accounts</h2>\r\n            <NavigationButtons\r\n                showBackToAll={!!viewSingleAccount}\r\n                onBackToAll={handleBackToAllAccounts}\r\n            />\r\n            {selectedAccountId ? (\r\n                // Display only the selected account with TransactionDetails\r\n                <div className=\"account-details\">\r\n                    {accounts\r\n                        .filter(account => account.id === selectedAccountId)\r\n                        .map(account => (\r\n                            <div className=\"account-card expanded\" key={account.id}>\r\n                                <h3>{account.account_holder_name || \"Account Holder\"}</h3>\r\n                                <p><strong>Account ID:</strong> {account.id}</p>\r\n                                <p><strong>Balance:</strong> ${account.balance}</p>\r\n                                <TransactionDetails accountId={selectedAccountId} /> {/* Render transaction details here */}\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n            ) : (\r\n                // Display all accounts with View Details button\r\n                <div className=\"account-cards\">\r\n                    {accounts.map(account => (\r\n                        <div className=\"account-card\" key={account.id}>\r\n                            <h3>{account.account_holder_name || \"Account Holder\"}</h3>\r\n                            <p><strong>Account ID:</strong> {account.id}</p>\r\n                            <p><strong>Balance:</strong> ${account.balance}</p>\r\n                            <button\r\n                                className=\"view-button\"\r\n                                onClick={() => handleViewDetails(account.id)}\r\n                            >\r\n                                View Details\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}