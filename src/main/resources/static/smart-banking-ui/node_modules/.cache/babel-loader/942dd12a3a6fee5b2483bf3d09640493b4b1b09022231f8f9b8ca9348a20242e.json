{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Boston University\\\\Fall 2 2024\\\\MET CS 763 - Software Security\\\\FinalApplication\\\\smart-bank\\\\smart-bank\\\\src\\\\main\\\\resources\\\\static\\\\smart-banking-ui\\\\src\\\\components\\\\InternalTransfer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAccountsByUser } from '../services/api';\nimport '../styles/InternalTransfer.css';\nimport '../styles/GlobalStyles.css';\nimport MainLayout from './MainLayout';\nimport { internalTransfer } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InternalTransfer() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [fromAccount, setFromAccount] = useState('');\n  const [toAccount, setToAccount] = useState('');\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    async function fetchUserAccounts() {\n      try {\n        const response = await getAccountsByUser(userId);\n        setAccounts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching user accounts:\", error);\n        setError(\"Failed to load accounts.\");\n      }\n    }\n    fetchUserAccounts();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (parseFloat(amount) > 0 && fromAccount && toAccount) {\n      try {\n        await internalTransfer(fromAccount, toAccount, amount);\n        alert(`Internal transfer of $${amount} submitted.`);\n        setAmount('');\n      } catch (error) {\n        console.error(\"Error in internal transfer:\", error);\n        alert(\"Transfer failed.\");\n      }\n    } else {\n      alert(\"Please fill out all fields correctly.\");\n    }\n  };\n\n  /*\r\n      const handleSubmit = (e) => {\r\n          e.preventDefault();\r\n          if (parseFloat(amount) > 0 && fromAccount && toAccount) {\r\n              alert(`Internal transfer of $${amount} from ${fromAccount} to ${toAccount} submitted.`);\r\n          } else {\r\n              alert(\"Please fill out all fields correctly.\");\r\n          }\r\n      };*/\n\n  const handleCancel = () => {\n    navigate(-1); // Go back to the previous page\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internal Money Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"transfer-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: fromAccount,\n            onChange: e => setFromAccount(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: account.id,\n              children: account.id\n            }, account.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toAccount,\n            onChange: e => setToAccount(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: account.id,\n              children: account.id\n            }, account.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            min: \"0.01\",\n            step: \"0.01\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancel,\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(InternalTransfer, \"kllQB4JU90U9SrRKIVWMS8O4vSI=\", false, function () {\n  return [useNavigate];\n});\n_c = InternalTransfer;\nexport default InternalTransfer;\nvar _c;\n$RefreshReg$(_c, \"InternalTransfer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getAccountsByUser","MainLayout","internalTransfer","jsxDEV","_jsxDEV","InternalTransfer","_s","accounts","setAccounts","fromAccount","setFromAccount","toAccount","setToAccount","amount","setAmount","error","setError","navigate","userId","localStorage","getItem","fetchUserAccounts","response","data","console","handleSubmit","e","preventDefault","parseFloat","alert","handleCancel","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","map","account","id","type","min","step","onClick","_c","$RefreshReg$"],"sources":["D:/Study/Boston University/Fall 2 2024/MET CS 763 - Software Security/FinalApplication/smart-bank/smart-bank/src/main/resources/static/smart-banking-ui/src/components/InternalTransfer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAccountsByUser } from '../services/api';\r\nimport '../styles/InternalTransfer.css';\r\nimport '../styles/GlobalStyles.css';\r\nimport MainLayout from './MainLayout';\r\nimport { internalTransfer } from '../services/api';\r\n\r\nfunction InternalTransfer() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [fromAccount, setFromAccount] = useState('');\r\n    const [toAccount, setToAccount] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId');\r\n        async function fetchUserAccounts() {\r\n            try {\r\n                const response = await getAccountsByUser(userId);\r\n                setAccounts(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching user accounts:\", error);\r\n                setError(\"Failed to load accounts.\");\r\n            }\r\n        }\r\n        fetchUserAccounts();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (parseFloat(amount) > 0 && fromAccount && toAccount) {\r\n            try {\r\n                await internalTransfer(fromAccount, toAccount, amount);\r\n                alert(`Internal transfer of $${amount} submitted.`);\r\n                setAmount('');\r\n            } catch (error) {\r\n                console.error(\"Error in internal transfer:\", error);\r\n                alert(\"Transfer failed.\");\r\n            }\r\n        } else {\r\n            alert(\"Please fill out all fields correctly.\");\r\n        }\r\n    };\r\n\r\n/*\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (parseFloat(amount) > 0 && fromAccount && toAccount) {\r\n            alert(`Internal transfer of $${amount} from ${fromAccount} to ${toAccount} submitted.`);\r\n        } else {\r\n            alert(\"Please fill out all fields correctly.\");\r\n        }\r\n    };*/\r\n\r\n    const handleCancel = () => {\r\n        navigate(-1); // Go back to the previous page\r\n    };\r\n\r\n    return (\r\n        <MainLayout>\r\n        <div className=\"transfer-page\">\r\n            <h2>Internal Money Transfer</h2>\r\n            {error && <p className=\"message\">Error: {error}</p>}\r\n            <form className=\"transfer-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>From Account:</label>\r\n                    <select value={fromAccount} onChange={(e) => setFromAccount(e.target.value)} required>\r\n                        <option value=\"\">Select Account</option>\r\n                        {accounts.map(account => (\r\n                            <option key={account.id} value={account.id}>{account.id}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>To Account:</label>\r\n                    <select value={toAccount} onChange={(e) => setToAccount(e.target.value)} required>\r\n                        <option value=\"\">Select Account</option>\r\n                        {accounts.map(account => (\r\n                            <option key={account.id} value={account.id}>{account.id}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Amount:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"button-group\">\r\n                    <button type=\"submit\" className=\"submit-button\">Submit</button>\r\n                    <button type=\"button\" onClick={handleCancel} className=\"cancel-button\">Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </MainLayout>\r\n    );\r\n}\r\n\r\nexport default InternalTransfer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}